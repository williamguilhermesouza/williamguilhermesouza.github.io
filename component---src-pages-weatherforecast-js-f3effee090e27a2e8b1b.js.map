{"version":3,"sources":["webpack:///./src/pages/weatherforecast.js","webpack:///./src/assets/images/pic06.jpg","webpack:///./src/assets/images/pic05.jpg","webpack:///./src/assets/images/pic09.gif"],"names":["IndexPage","fullMenu","id","className","style","textAlign","src","pic9","alt","href","target","pic5","pic6","module","exports"],"mappings":"8FAAA,2GAuFeA,UA/EG,kBAChB,kBAAC,IAAD,CAAQC,UAAQ,GACd,6BAASC,GAAG,WACV,gCACE,yBAAKC,UAAU,SACb,4DACA,uHAIJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QAAQC,MAAO,CAACC,UAAW,YACxC,0BAAMF,UAAU,aACd,yBAAKG,IAAKC,IAAMC,IAAI,SAEtB,4RAMA,+kBAUA,iuBASA,sEAA2C,uBAAGC,KAAK,2DAA2DC,OAAO,UAA1E,WAE3C,wBAAIP,UAAU,SAAd,uBACA,iEAIA,6BAASA,UAAU,YACjB,iCACE,uBAAGM,KAAK,aAAaN,UAAU,SAC7B,yBAAKG,IAAKK,IAAMH,IAAI,MAEtB,wBAAIL,UAAU,SAAd,uBACA,iWAGA,uBAAGM,KAAK,aAAaN,UAAU,WAA/B,eAIF,iCACE,uBAAGM,KAAK,YAAYN,UAAU,SAC5B,yBAAKG,IAAKM,IAAMJ,IAAI,MAEtB,wBAAIL,UAAU,SAAd,YACA,seAGA,uBAAGM,KAAK,YAAYN,UAAU,WAA9B,sB,qBC5EdU,EAAOC,QAAU,IAA0B,qD,qBCA3CD,EAAOC,QAAU,IAA0B,qD,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-weatherforecast-js-f3effee090e27a2e8b1b.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/Layout';\nimport pic9 from '../assets/images/pic09.gif';\nimport pic5 from '../assets/images/pic05.jpg';\nimport pic6 from '../assets/images/pic06.jpg';\n\n\nconst IndexPage = () => (\n  <Layout fullMenu>\n    <section id=\"wrapper\">\n      <header>\n        <div className=\"inner\">\n          <h2>Sistema de Previsão do Tempo</h2>\n          <p>Projeto com o objetivo de mostrar a previsão do tempo com base em uma API Openweather.</p>\n        </div>\n      </header>\n\n      <div className=\"wrapper\">\n        <div className=\"inner\" style={{textAlign: 'justify'}}>\n          <span className=\"image fit\">\n            <img src={pic9} alt=\"api\" />\n          </span>\n          <p>\n            Este projeto é parte do teste técnico proposto pela ADDE sistemas, \n            no qual o objetivo era desenvolver um sistema contendo frontend e backend capaz \n            de mostrar o clima atual e a previsão do tempo a partir do input de um cidade e/ou localização do usuário.           \n          </p>\n\n          <p>\n            No backend foi utilizada a tecnologia Python, na versão 3.9 com o framework Flask para:\n\n            - Comunicação com a api externa OpenWeatherMap para pegar os dados de clima filtrado por cidade/região.\n            - Persistência dos dados recuperados da API por 15 minutos através de cache\n            - Filtragem dos dados moldando o objeto desejado a ser fornecido para o frontend\n            - Uso de uma rota exclusiva para recuperar os dados usando localização (latitude e longitude)\n            - Uso de rota exclusiva para recuperar os dados de previsão de 7 dias, utilizando o nome da Cidade desejada e Região.\n          </p>\n\n          <p>\n              No Frontend foi utilizado Typescript junto ao framework Angular 11, com o objetivo de capturar entrada do usuário através de um input, e exibir dados recuperados do backend com base nessa entrada. Por padrão a previsão utilizada a localização atual do usuário, fornecida pelo navegador.\n\n                - Foi criado um serviço weather que consome as informações do backend e é usado na aplicação para entregar a informação\n                - Foi utilizada a tipagem de dados do typescript, onde é recebido um objeto do tipo Weather do backend, que devve estar em conformidade com os atributos esperados\n                - Após a consulta pelo backend é exibido para o usuário os dados através da temperatura atual, cidade, clima, e de um indicativo visual.\n\n          </p>\n\n          <p> Veja o código completo da aplicação no <a href=\"https://github.com/williamguilhermesouza/WeatherForecast\" target=\"_blank\">Github</a></p>\n\n          <h3 className=\"major\">Veja outro projetos</h3>\n          <p>\n            Abaixo outros projetos realizados:\n          </p>\n\n          <section className=\"features\">\n            <article>\n              <a href=\"/bethehero\" className=\"image\">\n                <img src={pic5} alt=\"\" />\n              </a>\n              <h3 className=\"major\">Projeto Be The Hero</h3>\n              <p>\n                Projeto Fullstack completo, de uma aplicação que tinha por objetivo integrar possíveis doadores à instituições de caridade. Nesse projeto foi desenvolvido um backend em NodeJS, sobre o express, e conexão com banco de dados sqlite3, um frontend web, utilizando ReactJS, e ainda um aplicativo mobile utilizando React-Native.\n              </p>\n              <a href=\"/bethehero\" className=\"special\">\n                Saiba mais\n              </a>\n            </article>\n            <article>\n              <a href=\"/devradar\" className=\"image\">\n                <img src={pic6} alt=\"\" />\n              </a>\n              <h3 className=\"major\">DevRadar</h3>\n              <p>\n                Mais um projeto Fullstack, com o objetivo de ser um radar de desenvolvedores, onde um desenvolvedor pode se cadastrar na aplicação, buscar e ser encontrado por outros desenvolvedores para troca de experiências. Nesta aplicação foi utilizado um backend feito em NodeJS e express, banco de dados não relacional MongoDB, frontend web em React e mobile em React-Native. Ainda, foi utilizada a biblioteca socket.io para atualizações de interface em tempo real.\n              </p>\n              <a href=\"/devradar\" className=\"special\">\n                Saiba mais\n              </a>\n            </article>\n          </section>\n        </div>\n      </div>\n    </section>\n  </Layout>\n);\n\nexport default IndexPage;","module.exports = __webpack_public_path__ + \"static/pic06-f5bfdbd29e58497b9a531b8abb92d5e1.jpg\";","module.exports = __webpack_public_path__ + \"static/pic05-ef0018010210e55ae15823cd9917cbb0.jpg\";","module.exports = __webpack_public_path__ + \"static/pic09-3d7beaeb732f5f12f4a3f0c70de4bbbb.gif\";"],"sourceRoot":""}