"use strict";(self.webpackChunkwilliamsouza=self.webpackChunkwilliamsouza||[]).push([[506],{9710:function(e,a,o){o.r(a);var t=o(7294),r=o(2737),s=o(983),l=o(518),c=o(753);a.default=()=>t.createElement(r.Z,{fullMenu:!0},t.createElement("section",{id:"wrapper"},t.createElement("header",null,t.createElement("div",{className:"inner"},t.createElement("h2",null,"API Endereços e Alunos"),t.createElement("p",null,"API para consulta a Banco de Dados PostgreSQL que armazena diversas informações de Alunos e seus Endereços"))),t.createElement("div",{className:"wrapper"},t.createElement("div",{className:"inner",style:{textAlign:"justify"}},t.createElement("span",{className:"image fit"},t.createElement("img",{src:s.Z,alt:"api"})),t.createElement("p",null,"Esta API tem como objetivo realizar as interações necessárias com um banco de dados PostgreSQL, sendo capaz de criar registros de Alunos e de Endereços, estes últimos associados aos alunos. Nesse projeto foi utilizada a arquitetura no modelo REST, e ainda a implementação do modelo GraphQL, mantendo o modelo REST, ou seja, sendo capaz de utilizar os dois modelos para interagir com o Banco."),t.createElement("p",null,"Como framework para estrutura da API foi utilizado o ",t.createElement("a",{href:"https://docs.nestjs.com/"},"NestJS"),", utilizado para construção de aplicações backend eficientes e escaláveis. Como linguagem, foi utilizado o ",t.createElement("a",{href:"https://www.typescriptlang.org/"},"Typescript")," aplicando elementos de programação funcional. Para implementação do projeto também foi criada uma image ",t.createElement("a",{href:"https://www.docker.com/"},"Docker")," (imagem que empacota a aplicação) e também um arquivo do Docker Compose com o qual se pode levantar a aplicação junto com seu banco de dados de uma só vez, de maneira prática."),t.createElement("p",null," Veja o código completo da aplicação no ",t.createElement("a",{href:"https://github.com/williamguilhermesouza/enderecosAlunosAPI",target:"_blank"},"Github")),t.createElement("h3",{className:"major"},"Veja outro projetos"),t.createElement("p",null,"Abaixo outros projetos realizados:"),t.createElement("section",{className:"features"},t.createElement("article",null,t.createElement("a",{href:"/bethehero",className:"image"},t.createElement("img",{src:l.Z,alt:""})),t.createElement("h3",{className:"major"},"Projeto Be The Hero"),t.createElement("p",null,"Projeto Fullstack completo, de uma aplicação que tinha por objetivo integrar possíveis doadores à instituições de caridade. Nesse projeto foi desenvolvido um backend em NodeJS, sobre o express, e conexão com banco de dados sqlite3, um frontend web, utilizando ReactJS, e ainda um aplicativo mobile utilizando React-Native."),t.createElement("a",{href:"/bethehero",className:"special"},"Saiba mais")),t.createElement("article",null,t.createElement("a",{href:"/devradar",className:"image"},t.createElement("img",{src:c.Z,alt:""})),t.createElement("h3",{className:"major"},"DevRadar"),t.createElement("p",null,"Mais um projeto Fullstack, com o objetivo de ser um radar de desenvolvedores, onde um desenvolvedor pode se cadastrar na aplicação, buscar e ser encontrado por outros desenvolvedores para troca de experiências. Nesta aplicação foi utilizado um backend feito em NodeJS e express, banco de dados não relacional MongoDB, frontend web em React e mobile em React-Native. Ainda, foi utilizada a biblioteca socket.io para atualizações de interface em tempo real."),t.createElement("a",{href:"/devradar",className:"special"},"Saiba mais")))))))},983:function(e,a,o){a.Z=o.p+"static/pic04-039baeccdec24285170bd921af1e09db.jpg"},518:function(e,a,o){a.Z=o.p+"static/pic05-1d3a5b97f9ca5d827491ea609c78c335.jpg"},753:function(e,a,o){a.Z=o.p+"static/pic06-05b2020cb254d18da7a7d878963768f0.jpg"}}]);
//# sourceMappingURL=component---src-pages-enderecosalunosapi-js-26302441c0bd0491cab0.js.map