(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{Azxx:function(e,a,o){e.exports=o.p+"static/pic06-f5bfdbd29e58497b9a531b8abb92d5e1.jpg"},Lliw:function(e,a,o){"use strict";o.r(a);var t=o("q1tI"),r=o.n(t),s=o("7oih"),l=o("xZ3l"),i=o.n(l),n=o("mwdr"),c=o.n(n),m=o("Azxx"),d=o.n(m);a.default=function(){return r.a.createElement(s.a,{fullMenu:!0},r.a.createElement("section",{id:"wrapper"},r.a.createElement("header",null,r.a.createElement("div",{className:"inner"},r.a.createElement("h2",null,"API Endereços e Alunos"),r.a.createElement("p",null,"API para consulta a Banco de Dados PostgreSQL que armazena diversas informações de Alunos e seus Endereços"))),r.a.createElement("div",{className:"wrapper"},r.a.createElement("div",{className:"inner",style:{textAlign:"justify"}},r.a.createElement("span",{className:"image fit"},r.a.createElement("img",{src:i.a,alt:"api"})),r.a.createElement("p",null,"Esta API tem como objetivo realizar as interações necessárias com um banco de dados PostgreSQL, sendo capaz de criar registros de Alunos e de Endereços, estes últimos associados aos alunos. Nesse projeto foi utilizada a arquitetura no modelo REST, e ainda a implementação do modelo GraphQL, mantendo o modelo REST, ou seja, sendo capaz de utilizar os dois modelos para interagir com o Banco."),r.a.createElement("p",null,"Como framework para estrutura da API foi utilizado o ",r.a.createElement("a",{href:"https://docs.nestjs.com/"},"NestJS"),", utilizado para construção de aplicações backend eficientes e escaláveis. Como linguagem, foi utilizado o ",r.a.createElement("a",{href:"https://www.typescriptlang.org/"},"Typescript")," aplicando elementos de programação funcional. Para implementação do projeto também foi criada uma image ",r.a.createElement("a",{href:"https://www.docker.com/"},"Docker")," (imagem que empacota a aplicação) e também um arquivo do Docker Compose com o qual se pode levantar a aplicação junto com seu banco de dados de uma só vez, de maneira prática."),r.a.createElement("p",null," Veja o código completo da aplicação no ",r.a.createElement("a",{href:"https://github.com/williamguilhermesouza/enderecosAlunosAPI",target:"_blank"},"Github")),r.a.createElement("h3",{className:"major"},"Veja outro projetos"),r.a.createElement("p",null,"Abaixo outros projetos realizados:"),r.a.createElement("section",{className:"features"},r.a.createElement("article",null,r.a.createElement("a",{href:"/bethehero",className:"image"},r.a.createElement("img",{src:c.a,alt:""})),r.a.createElement("h3",{className:"major"},"Projeto Be The Hero"),r.a.createElement("p",null,"Projeto Fullstack completo, de uma aplicação que tinha por objetivo integrar possíveis doadores à instituições de caridade. Nesse projeto foi desenvolvido um backend em NodeJS, sobre o express, e conexão com banco de dados sqlite3, um frontend web, utilizando ReactJS, e ainda um aplicativo mobile utilizando React-Native."),r.a.createElement("a",{href:"/bethehero",className:"special"},"Saiba mais")),r.a.createElement("article",null,r.a.createElement("a",{href:"/devradar",className:"image"},r.a.createElement("img",{src:d.a,alt:""})),r.a.createElement("h3",{className:"major"},"DevRadar"),r.a.createElement("p",null,"Mais um projeto Fullstack, com o objetivo de ser um radar de desenvolvedores, onde um desenvolvedor pode se cadastrar na aplicação, buscar e ser encontrado por outros desenvolvedores para troca de experiências. Nesta aplicação foi utilizado um backend feito em NodeJS e express, banco de dados não relacional MongoDB, frontend web em React e mobile em React-Native. Ainda, foi utilizada a biblioteca socket.io para atualizações de interface em tempo real."),r.a.createElement("a",{href:"/devradar",className:"special"},"Saiba mais")))))))}},mwdr:function(e,a,o){e.exports=o.p+"static/pic05-ef0018010210e55ae15823cd9917cbb0.jpg"},xZ3l:function(e,a,o){e.exports=o.p+"static/pic04-69380907fd83f9cb1ca7e9c2d831e269.jpg"}}]);
//# sourceMappingURL=component---src-pages-enderecosalunosapi-js-912c11f40de5ff37baa4.js.map